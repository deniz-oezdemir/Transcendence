server {
    # Redireccionar HTTP a HTTPS
    listen 80;
    # server_name localhost;
    return 301 https://$host$request_uri;
}

server {
    # listen 8000;
    # server_name localhost;

    # SSL configuration
		listen 443 ssl default_server;
		listen [::]:443 ssl default_server;
		ssl_certificate /etc/nginx/ssl/selfsigned.crt;
		ssl_certificate_key /etc/nginx/ssl/selfsigned.key;

		ssl_protocols TLSv1.2 TLSv1.3;

		proxy_buffer_size 128k;
    proxy_buffers 4 256k;
    proxy_busy_buffers_size 256k;
    
    proxy_connect_timeout 600;
    proxy_send_timeout 600;
    proxy_read_timeout 600;
    send_timeout 600;

    location /avatars/ {
        alias /usr/share/nginx/images/;
        # try_files $uri $uri/ =404;
        autoindex off;
        client_max_body_size 2M;
        add_header 'Access-Control-Allow-Origin' '*';
				add_header X-Content-Type-Options "nosniff"; # Prevenir MIME sniffing
        types {
            image/jpeg jpg jpeg;
            image/png png;
            image/gif gif;
            image/webp webp;
        }
        location ~ \.(php|html|htm|js)$ {
            return 403;
        }
    }

		# Common configuration for all services
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header Origin $http_origin;


    # Proxy requests to the UAM microservice
		
    location /api/uam/ {
        proxy_pass http://accounts:8000/;
    }

    # location /api/uam/register/ {
    #     proxy_pass http://accounts:8000/register/;
    # }

    # location /api/uam/login/ {
    #     proxy_pass http://accounts:8000/login/;
    # }

    # location /api/uam/logout/ {
    #     proxy_pass http://accounts:8000/logout/;
    # }

    # location /api/uam/profile/ {
    #     proxy_pass http://accounts:8000/profile/;
    # }

    # location /api/uam/friend-request/ {
    #     proxy_pass http://accounts:8000/friend-request/;
    # }

    # location /api/uam/change-username/ {
    #     proxy_pass http://accounts:8000/change-username/;
    # }

    # location /api/uam/change-password/ {
    #     proxy_pass http://accounts:8000/change-password/;
    # }

    # location /api/uam/change-avatar/ {
    #     proxy_pass http://accounts:8000/change-avatar/;
    # }

    # Pong API service WebSocket endpoint
    location /ws/game/ {
        proxy_pass http://pong-api:8000/ws/game/;

        # WebSocket support
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_read_timeout 86400;
    }

		location /game/create_game/ {
				proxy_pass http://pong-api:8000/game/create_game/;
				proxy_set_header Host $host;
				proxy_set_header X-Real-IP $remote_addr;
				proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
				proxy_set_header X-Forwarded-Proto $scheme;
		}

    # Pong API service
    location /api/pong-api/ {
        proxy_pass http://pong-api:8000/;
    }

    # Matchmaking service WebSocket endpoint
    location /ws/waiting-room/ {
        proxy_pass http://matchmaking:8000/ws/waiting-room/;

        # WebSocket support
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_read_timeout 86400;
    }

    # Matchmaking service HTTP endpoints
    location /api/matchmaking/ {
        proxy_pass http://matchmaking:8000/;
    }

    location /api/game-history/ {
				rewrite ^/api/game-history(/.*)$ $1 break;
        proxy_pass http://game-history:8000/;
    }

    # AI Opponent service
    location /ai_player/ {
        proxy_pass http://ai-opponent:8000/;

        # WebSocket support
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_read_timeout 86400;
    }

    # Proxy all requests to the Frontend service
    location / {
        proxy_pass http://frontend:80/;
    }
}
